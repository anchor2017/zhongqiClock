C51 COMPILER V8.08   GUI                                                                   07/24/2017 11:01:09 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE GUI
OBJECT MODULE PLACED IN gui.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE gui.c OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"gui.h"
   2          
   3          //---汉字的字库头文件---//
   4          #include"charcode.h"
   5          
   6          //---如果要显示图片就添加这个头文件---//
   7          #ifdef PICTURE_SHOW        //在GUI.h中可以定义
              
              #include"picture.h"
              
              #endif
  12          
  13          /****************************************************************************
  14          *函数名：GUI_Dot
  15          *输  入：x：点的X坐标
  16          *      * y：点的Y坐标
  17          *      * color：点的颜色
  18          *输  出：
  19          *功  能：给一块3*3像素涂上颜色。
  20          ****************************************************************************/     
  21          
  22          void GUI_Dot(uint x, uint y, uint color)
  23          {  
  24   1              uchar i;
  25   1      
  26   1              TFT_SetWindow(x - 1, y - 1, x + 2, y + 2);  //单个像素
  27   1      
  28   1              for(i=0; i<16; i++)
  29   1              {
  30   2                      TFT_WriteColor(color);
  31   2              }
  32   1      }
  33          
  34          /****************************************************************************
  35          *函数名：GUI_Line 
  36          *输  入：xStart：直线的起始X坐标
  37          *      * yStart：直线的其实Y坐标
  38          *      * xEnd：直线的结束X坐标
  39          *      * yEnd：直线的结束Y坐标
  40          *      * color：直线的颜色
  41          *输  出：
  42          *功  能：画一条直线
  43          ****************************************************************************/     
  44          
  45          void GUI_Line(uint xStart, uint yStart, uchar xEnd, uint yEnd, uint color)
  46          {
  47   1              uint t;  
  48   1              int xerr = 0, yerr = 0, delta_x, delta_y, distance;  
  49   1              int incx, incy;  
  50   1              uint row, col;  
  51   1              delta_x = xEnd - xStart;//计算坐标增量  
  52   1              delta_y = yEnd - yStart;  
  53   1              col = xStart;  
  54   1              row = yStart;  
  55   1              if (delta_x > 0)
C51 COMPILER V8.08   GUI                                                                   07/24/2017 11:01:09 PAGE 2   

  56   1              {
  57   2                      incx=1;//设置单步方向
  58   2              }         
  59   1              else    
  60   1              {  
  61   2                  if (delta_x == 0)
  62   2                      {
  63   3                              incx = 0;//垂直线 
  64   3                      }                
  65   2                  else 
  66   2                              {
  67   3                                      incx = -1;
  68   3                                      delta_x = -delta_x;
  69   3                              }  
  70   2              }  
  71   1              if (delta_y > 0)
  72   1              {
  73   2                      incy = 1;
  74   2              }         
  75   1              else  
  76   1              {  
  77   2                  if (delta_y == 0)
  78   2                      {
  79   3                              incy = 0;//水平线  
  80   3                      } 
  81   2                  else 
  82   2                      {
  83   3                              incy = -1;
  84   3                              delta_y = -delta_y;
  85   3                      }  
  86   2              }  
  87   1              if (delta_x > delta_y)
  88   1              { 
  89   2                      distance = delta_x;//选取基本增量坐标轴  
  90   2              }
  91   1              else
  92   1              {
  93   2                      distance = delta_y; 
  94   2              }       
  95   1              for (t=0; t<=distance+1; t++)  
  96   1              {                                     //画线输出  
  97   2                  GUI_Dot(col, row, color);
  98   2                  xerr += delta_x;  
  99   2                  yerr += delta_y;  
 100   2                      if(xerr > distance)  
 101   2                  {  
 102   3                      xerr -= distance;  
 103   3                      col += incx;  
 104   3                  }  
 105   2                  if(yerr > distance)  
 106   2                  {  
 107   3                      yerr -= distance;  
 108   3                      row += incy;  
 109   3                  }  
 110   2              }  
 111   1      }         
 112          
 113          /****************************************************************************
 114          *函数名：GUI_WriteASCII 
 115          *输  入：x：字母显示的X坐标
 116          *      * y：字母显示的Y坐标
 117          *      * cn：要显示的字母
C51 COMPILER V8.08   GUI                                                                   07/24/2017 11:01:09 PAGE 3   

 118          *      * wordColor：文字的颜色
 119          *      * backColor：背景颜色
 120          *输  出：
 121          *功  能：写16X24的ASCII字符
 122          ****************************************************************************/     
 123          
 124          #ifdef USE_ASCII
 125          
 126          void GUI_WriteASCII(uint x, uint y, uchar *p, uint wordColor, uint backColor)
 127          {
 128   1              uchar j, wordByte,wordNum;
 129   1              uint color;
 130   1              while(*p != '\0')
 131   1              {
 132   2                      wordNum = *p - 32;
 133   2                      TFT_SetWindow(x,y,x+15, y+23);     //15，23
 134   2                      for (wordByte=0; wordByte<48; wordByte++)
 135   2                      {
 136   3                              color = ASCII16x24[wordNum][wordByte];
 137   3                              for (j=0; j<8; j++) 
 138   3                              {
 139   4                                      if ((color&0x80) == 0x80)
 140   4                                      {
 141   5                                              TFT_WriteColor(wordColor);
 142   5                                      }                                               
 143   4                                      else
 144   4                                      {
 145   5                                              TFT_WriteColor(backColor);
 146   5                                      }       
 147   4                                      color <<= 1;
 148   4                              }
 149   3                      }
 150   2                      p++;
 151   2                      x +=16;
 152   2              }
 153   1      }
 154          #endif
 155          
 156          void GUI_WriteASCII2(uint x, uint y, uchar *p, uint wordColor, uint backColor)
 157          {
 158   1              uchar j, wordByte,wordNum;
 159   1              uint color;
 160   1              while(*p != '\0')
 161   1              {
 162   2                      wordNum = *p-48;                  //数组加‘0’表示从数字0的首地址开始计数
 163   2                      TFT_SetWindow(x,y,x+23, y+47);    //字符大小 24*48
 164   2                      for (wordByte=0; wordByte<144; wordByte++)       //一共144个字节
 165   2                      {
 166   3                              color = ASCII24x48[wordNum][wordByte];    
 167   3                              for (j=0; j<8; j++) 
 168   3                              {
 169   4                                      if ((color&0x80) == 0x80)          //每个字节一共8位
 170   4                                      {
 171   5                                              TFT_WriteColor(wordColor);        //如果为1则是字体颜色
 172   5                                      }                                               
 173   4                                      else
 174   4                                      {
 175   5                                              TFT_WriteColor(backColor);        //如果为0则为背景的颜色
 176   5                                      }       
 177   4                                      color <<= 1;                                    //次高位为最高位
 178   4                              }
 179   3                      }
C51 COMPILER V8.08   GUI                                                                   07/24/2017 11:01:09 PAGE 4   

 180   2                      p++;
 181   2                      x +=24;
 182   2              }
 183   1      }
 184          
 185          /****************************************************************************
 186          *函数名：GUI_ShowPicture 
 187          *输  入：x：图片显示起始X坐标
 188          *      * y：图片显示起始Y坐标
 189          *      * wide：图片的宽度
 190          *      * high：图片的高度
 191          *输  出：
 192          *功  能：显示一张图片（取自picture.h中的pic[]数组，换图片直接替换掉pic数组就
 193          *      * 可以了）
 194          ****************************************************************************/     
 195          
 196          #ifdef PICTURE_SHOW
              
              void GUI_ShowPicture(uint x, uint y, uchar wide, uint high)
              {
                      uint temp = 0, tmp = 0, num = 0;
                      TFT_SetWindow(x, y, x+wide-1, y+high-1);
                      num = wide * high * 2;
                      do
                      {   
                              temp = pic[tmp + 1];
                              temp = temp << 8;
                              temp = temp | pic[tmp];
                              TFT_WriteColor(temp);   //逐点显示
                              tmp += 2;
                      }
                      while(tmp < num);       
              }
              
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    742    ----
   CONSTANT SIZE    =   7254    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      66
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
