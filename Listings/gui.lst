C51 COMPILER V9.56.0.0   GUI                                                               07/27/2017 10:57:44 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE GUI
OBJECT MODULE PLACED IN .\Objects\gui.obj
COMPILER INVOKED BY: F:\keil51\C51\BIN\C51.EXE gui.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\gui.ls
                    -t) TABS(2) OBJECT(.\Objects\gui.obj)

line level    source

   1          #include"gui.h"
   2          
   3          //---汉字的字库头文件---//
   4          #include"charcode.h"
   5          
   6          //---如果要显示图片就添加这个头文件---//
   7          #ifdef PICTURE_SHOW    //在GUI.h中可以定义
              
              #include"picture.h"
              
              #endif
  12          
  13          /****************************************************************************
  14          *函数名：GUI_Dot
  15          *输  入：x：点的X坐标
  16          *      * y：点的Y坐标
  17          *      * color：点的颜色
  18          *输  出：
  19          *功  能：给一块3*3像素涂上颜色。
  20          ****************************************************************************/   
  21          
  22          void GUI_Dot(uint x, uint y, uint color)
  23          {  
  24   1        uchar i;
  25   1      
  26   1        TFT_SetWindow(x - 1, y - 1, x + 2, y + 2);  //单个像素
  27   1      
  28   1        for(i=0; i<16; i++)
  29   1        {
  30   2          TFT_WriteColor(color);
  31   2        }
  32   1      }
  33          
  34          /****************************************************************************
  35          *函数名：GUI_Line 
  36          *输  入：xStart：直线的起始X坐标
  37          *      * yStart：直线的其实Y坐标
  38          *      * xEnd：直线的结束X坐标
  39          *      * yEnd：直线的结束Y坐标
  40          *      * color：直线的颜色
  41          *输  出：
  42          *功  能：画一条直线
  43          ****************************************************************************/   
  44          
  45          void GUI_Line(uint xStart, uint yStart, uchar xEnd, uint yEnd, uint color)
  46          {
  47   1        uint t;  
  48   1        int xerr = 0, yerr = 0, delta_x, delta_y, distance;  
  49   1        int incx, incy;  
  50   1        uint row, col;  
  51   1        delta_x = xEnd - xStart;//计算坐标增量  
  52   1        delta_y = yEnd - yStart;  
  53   1        col = xStart;  
  54   1        row = yStart;  
C51 COMPILER V9.56.0.0   GUI                                                               07/27/2017 10:57:44 PAGE 2   

  55   1        if (delta_x > 0)
  56   1        {
  57   2          incx=1;//设置单步方向
  58   2        }     
  59   1        else    
  60   1        {  
  61   2            if (delta_x == 0)
  62   2          {
  63   3            incx = 0;//垂直线 
  64   3          }      
  65   2            else 
  66   2            {
  67   3              incx = -1;
  68   3              delta_x = -delta_x;
  69   3            }  
  70   2        }  
  71   1        if (delta_y > 0)
  72   1        {
  73   2          incy = 1;
  74   2        }   
  75   1        else  
  76   1        {  
  77   2            if (delta_y == 0)
  78   2          {
  79   3            incy = 0;//水平线  
  80   3          } 
  81   2            else 
  82   2          {
  83   3            incy = -1;
  84   3            delta_y = -delta_y;
  85   3          }  
  86   2        }  
  87   1        if (delta_x > delta_y)
  88   1        { 
  89   2          distance = delta_x;//选取基本增量坐标轴  
  90   2        }
  91   1        else
  92   1        {
  93   2          distance = delta_y; 
  94   2        }   
  95   1        for (t=0; t<=distance+1; t++)  
  96   1        {                                     //画线输出  
  97   2            GUI_Dot(col, row, color);
  98   2            xerr += delta_x;  
  99   2            yerr += delta_y;  
 100   2            if(xerr > distance)  
 101   2            {  
 102   3                xerr -= distance;  
 103   3                col += incx;  
 104   3            }  
 105   2            if(yerr > distance)  
 106   2            {  
 107   3                yerr -= distance;  
 108   3                row += incy;  
 109   3            }  
 110   2        }  
 111   1      }   
 112          
 113          /****************************************************************************
 114          *函数名：GUI_WriteASCII 
 115          *输  入：x：字母显示的X坐标
 116          *      * y：字母显示的Y坐标
C51 COMPILER V9.56.0.0   GUI                                                               07/27/2017 10:57:44 PAGE 3   

 117          *      * cn：要显示的字母
 118          *      * wordColor：文字的颜色
 119          *      * backColor：背景颜色
 120          *输  出：
 121          *功  能：写16X24的ASCII字符
 122          ****************************************************************************/   
 123          
 124          #ifdef USE_ASCII
 125          
 126          void GUI_WriteASCII(uint x, uint y, uchar *p, uint wordColor, uint backColor)
 127          {
 128   1        uchar j, wordByte,wordNum;
 129   1        uint color;
 130   1        while(*p != '\0')
 131   1        {
 132   2          wordNum = *p - 32;
 133   2          TFT_SetWindow(x,y,x+15, y+23);     //15，23
 134   2          for (wordByte=0; wordByte<48; wordByte++)
 135   2          {
 136   3            color = ASCII16x24[wordNum][wordByte];
 137   3            for (j=0; j<8; j++) 
 138   3            {
 139   4              if ((color&0x80) == 0x80)
 140   4              {
 141   5                TFT_WriteColor(wordColor);
 142   5              }             
 143   4              else
 144   4              {
 145   5                TFT_WriteColor(backColor);
 146   5              }   
 147   4              color <<= 1;
 148   4            }
 149   3          }
 150   2          p++;
 151   2          x +=16;
 152   2        }
 153   1      }
 154          
 155          
 156          void GUI_WriteASCIICh(uint x, uint y, uchar c, uint wordColor, uint backColor)
 157          {
 158   1        uchar j, wordByte,wordNum;
 159   1        uint color;
 160   1          wordNum = c - 32;
 161   1          TFT_SetWindow(x,y,x+15, y+23);     //15，23
 162   1          for (wordByte=0; wordByte<48; wordByte++)
 163   1          {
 164   2            color = ASCII16x24[wordNum][wordByte];
 165   2            for (j=0; j<8; j++) 
 166   2            {
 167   3              if ((color&0x80) == 0x80)
 168   3              {
 169   4                TFT_WriteColor(wordColor);
 170   4              }             
 171   3              else
 172   3              {
 173   4                TFT_WriteColor(backColor);
 174   4              }   
 175   3              color <<= 1;
 176   3            }
 177   2          }
 178   1      }
C51 COMPILER V9.56.0.0   GUI                                                               07/27/2017 10:57:44 PAGE 4   

 179          #endif
 180          
 181          void GUI_Writetable(uint x, uint y, uchar *c, uint wordColor, uint backColor)
 182          {
 183   1        uchar j, wordByte;
 184   1        uint color;
 185   1        TFT_SetWindow(x,y,x+15, y+23);     //15，23
 186   1        for (wordByte=0; wordByte<48; wordByte++)
 187   1          {
 188   2            color = c[wordByte];
 189   2            for (j=0; j<8; j++) 
 190   2            {
 191   3              if ((color&0x80) == 0x80)
 192   3              {
 193   4                TFT_WriteColor(wordColor);
 194   4              }             
 195   3              else
 196   3              {
 197   4                TFT_WriteColor(backColor);
 198   4              }   
 199   3              color <<= 1;
 200   3            }
 201   2          }
 202   1      }
 203          
 204          
 205          
 206          
 207          
 208          void GUI_WriteASCII2(uint x, uint y, uchar *p, uint wordColor, uint backColor)
 209          {
 210   1        uchar j, wordByte,wordNum;
 211   1        uint color;
 212   1        while(*p != '\0')
 213   1        {
 214   2          wordNum = *p-48;      //数组加‘0’表示从数字0的首地址开始计数
 215   2          TFT_SetWindow(x,y,x+23, y+47);    //字符大小 24*48
 216   2          for (wordByte=0; wordByte<144; wordByte++)   //一共144个字节
 217   2          {
 218   3            color = ASCII24x48[wordNum][wordByte];    
 219   3            for (j=0; j<8; j++) 
 220   3            {
 221   4              if ((color&0x80) == 0x80)    //每个字节一共8位
 222   4              {
 223   5                TFT_WriteColor(wordColor);    //如果为1则是字体颜色
 224   5              }             
 225   4              else
 226   4              {
 227   5                TFT_WriteColor(backColor);    //如果为0则为背景的颜色
 228   5              }   
 229   4              color <<= 1;          //次高位为最高位
 230   4            }
 231   3          }
 232   2          p++;
 233   2          x +=24;
 234   2        }
 235   1      }
 236          
 237          
 238          void GUI_WriteASCII2Ch(uint x, uint y, uchar c, uint wordColor, uint backColor)
 239          {
 240   1        uchar j, wordByte,wordNum;
C51 COMPILER V9.56.0.0   GUI                                                               07/27/2017 10:57:44 PAGE 5   

 241   1        uint color;
 242   1          wordNum = c-48;     //数组加‘0’表示从数字0的首地址开始计数
 243   1          TFT_SetWindow(x,y,x+23, y+47);    //字符大小 24*48
 244   1          for (wordByte=0; wordByte<144; wordByte++)   //一共144个字节
 245   1          {
 246   2            color = ASCII24x48[wordNum][wordByte];    
 247   2            for (j=0; j<8; j++) 
 248   2            {
 249   3              if ((color&0x80) == 0x80)    //每个字节一共8位
 250   3              {
 251   4                TFT_WriteColor(wordColor);    //如果为1则是字体颜色
 252   4              }             
 253   3              else
 254   3              {
 255   4                TFT_WriteColor(backColor);    //如果为0则为背景的颜色
 256   4              }   
 257   3              color <<= 1;          //次高位为最高位
 258   3            }
 259   2          }
 260   1      }
 261          /****************************************************************************
 262          *函数名：GUI_ShowPicture 
 263          *输  入：x：图片显示起始X坐标
 264          *      * y：图片显示起始Y坐标
 265          *      * wide：图片的宽度
 266          *      * high：图片的高度
 267          *输  出：
 268          *功  能：显示一张图片（取自picture.h中的pic[]数组，换图片直接替换掉pic数组就
 269          *      * 可以了）
 270          ****************************************************************************/   
 271          
 272          #ifdef PICTURE_SHOW
              
              void GUI_ShowPicture(uint x, uint y, uchar wide, uint high)
              {
                uint temp = 0, tmp = 0, num = 0;
                TFT_SetWindow(x, y, x+wide-1, y+high-1);
                num = wide * high * 2;
                do
                {   
                  temp = pic[tmp + 1];
                  temp = temp << 8;
                  temp = temp | pic[tmp];
                  TFT_WriteColor(temp);   //逐点显示
                  tmp += 2;
                }
                while(tmp < num); 
              }
              
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1077    ----
   CONSTANT SIZE    =   6782    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----     109
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
