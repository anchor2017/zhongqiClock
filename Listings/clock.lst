C51 COMPILER V9.56.0.0   CLOCK                                                             07/27/2017 10:57:44 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CLOCK
OBJECT MODULE PLACED IN .\Objects\clock.obj
COMPILER INVOKED BY: F:\keil51\C51\BIN\C51.EXE clock.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\cloc
                    -k.lst) TABS(2) OBJECT(.\Objects\clock.obj)

line level    source

   1                /***************************************************************************************
   2           *  FileName          : clock.c
   3           *  CopyRight         :
   4           *  ModuleName        :
   5           *
   6           *  CPU             :
   7           *  RTOS            :
   8           *
   9           *  Create Data         : 2017.7.22
  10           *  Author/Corportation     : yezhihuo
  11           *
  12           *  Abstract Description    : 
  13           *
  14           *--------------------------------Revision History--------------------------------------
  15           *  No  version   Data      Revised By      Item      Description
  16           *
  17           *
  18           ***************************************************************************************/
  19          
  20          
  21          /**************************************************************
  22          * Debug switch Section 
  23          **************************************************************/
  24          
  25          
  26          /**************************************************************
  27          * Include File Section
  28          **************************************************************/
  29          #include"clock.h"
  30          /**************************************************************
  31          * Macro Define Section  
  32          **************************************************************/
  33          
  34          
  35          /**************************************************************
  36          * Struct Define Section
  37          **************************************************************/
  38          
  39          
  40          /**************************************************************
  41          * Prototype Declare Section  
  42          **************************************************************/
  43          
  44          
  45          /**************************************************************
  46          * Global Variable Declare Section
  47          **************************************************************/
  48          uchar sb = 0;                     //每增加20次记录1s
  49          uchar clockTag = 0;                //0为关闭，1为开启，2为正在向
  50          clockTime time, timeclock;
  51          
  52          sbit PWM = P3^5;                           //震动信号输出
  53          uchar pwmCount, pwmPeriod ;          //占空比计数器，占空比标数
  54          uint num;
C51 COMPILER V9.56.0.0   CLOCK                                                             07/27/2017 10:57:44 PAGE 2   

  55          /**************************************************************
  56          * Function Define Section
  57          **************************************************************/
  58          
  59          /**
  60          *  @name: void timeFun() 
  61          * @description: 中断服务特殊功能寄存器配置（定时器0初始化）
  62           *  @param    :none
  63           *  @return   : none
  64           *  @notice : 12MHZ
  65           */
  66          void initTimer()
  67          {
  68   1        TMOD=0x01;      //模式1
  69   1        TH0 = (65536 - 45874) / 256;
  70   1        TL0 = (65536 - 45874) % 256;   //0.05s
  71   1        ET0=1;     //开定时器
  72   1        TR0=1;     //开定时器中断
  73   1        EA=1;    //开总中断
  74   1      }
  75          
  76          /**
  77          *  @name: void timeFun() 
  78          * @description: 时钟计时
  79           *  @param    :none
  80           *  @return   : none
  81           *  @notice : 使用定时器0，程序运行期间始终运行
  82           */
  83          void timeFun() interrupt 1
  84          {
  85   1        TH0 = (65536 - 45870) / 256;
  86   1        TL0 = (65536 - 45870) % 256;   //0.05s
  87   1        if(sb >= 20 )             //20次为1s
  88   1        {
  89   2          sb = 0;
  90   2          if( time.second < 59 )         //60秒
  91   2          {
  92   3            time.second++;
  93   3          }
  94   2          else
  95   2          {
  96   3            time.second = 0;                    
  97   3            if( time.minute <59 )     //60分钟
  98   3            {
  99   4              time.minute++;
 100   4            }
 101   3            else
 102   3            {
 103   4              time.minute = 0;
 104   4              if( time.hour <23 )           ///1小时
 105   4              {
 106   5                                                                                                                   
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                        time.hour++;
 107   5              }
 108   4              else
 109   4              {
 110   5                time.hour = 0;
 111   5              }
 112   4            }
 113   3          }     
C51 COMPILER V9.56.0.0   CLOCK                                                             07/27/2017 10:57:44 PAGE 3   

 114   2            if( clockTag == 1 )           //判断闹钟
 115   2            {
 116   3               if(time.hour == timeclock.hour && time.minute == timeclock.minute && time.second == timeclock.second)
 117   3               {  
 118   4                 clockTag = 2;     
 119   4               }
 120   3             }    
 121   2        }
 122   1        else
 123   1        {
 124   2         sb++;
 125   2        }
 126   1      }
 127          
 128          /**
 129          *  @name:void pwmInit();
 130          * @description: 初始化pwm，开启震动
 131           *  @param    :none
 132           *  @return   : none
 133           *  @notice : 使用定时器1
 134           */
 135          void pwm() interrupt 3
 136          {
 137   1        TH1 = 0XCC;
 138   1        TL1 = 0XCC;
 139   1        pwmCount++;
 140   1        num++;  
 141   1        if( num > 60000 )
 142   1        {  
 143   2        num = 0;
 144   2        }
 145   1        if( num % 1000 == 0 )         //从新计数
 146   1        {
 147   2          pwmPeriod += 10;
 148   2        }
 149   1        if( pwmCount == 100 )
 150   1        {
 151   2          pwmCount = 0;
 152   2        }
 153   1        if( pwmPeriod > 100 )
 154   1        {
 155   2          pwmPeriod = PWM_MODE;
 156   2        }
 157   1        if( pwmCount < pwmPeriod )    //控制输出
 158   1        {
 159   2          PWM = 1;
 160   2        }
 161   1        else
 162   1        {
 163   2          PWM = 0;
 164   2        }
 165   1      }
 166          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    257    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   CLOCK                                                             07/27/2017 10:57:44 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
