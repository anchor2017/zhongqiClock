C51 COMPILER V9.56.0.0   SETTIME                                                           07/27/2017 10:57:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SETTIME
OBJECT MODULE PLACED IN .\Objects\settime.obj
COMPILER INVOKED BY: F:\keil51\C51\BIN\C51.EXE settime.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\se
                    -ttime.lst) TABS(2) OBJECT(.\Objects\settime.obj)

line level    source

   1          /***************************************************************************************
   2           *  FileName          : settime.c
   3           *  CopyRight         : 
   4           *  ModuleName          :  
   5           *
   6           *  CPU             :
   7           *  RTOS            :
   8           *
   9           *  Create Data         : 
  10           *  Author/Corportation     :  caiyinmao
  11           *
  12           *  Abstract Description    :    …Ë÷√ ±º‰
  13           *
  14           *--------------------------------Revision History--------------------------------------
  15           *  No  version   Data      Revised By      Item      Description
  16           *  
  17           *
  18           ***************************************************************************************/
  19          
  20          
  21          /**************************************************************
  22          * Debug switch Section
  23          **************************************************************/
  24          
  25          
  26          /**************************************************************
  27          * Include File Section
  28          **************************************************************/
  29          #include<reg52.h>
  30          #include "clock.h"    //“˝”√»´æ÷±‰¡øtime
  31          #include "calTimeDisplay.h"
  32          #include "touch.h"
  33          #include "paintTFT.h"
  34          #include "GUI.h"
  35          #include "lcd_driver.h"
  36          
  37          /**************************************************************
  38          * Macro Define Section
  39          **************************************************************/
  40          
  41          /**************************************************************
  42          * Struct Define Section
  43          **************************************************************/
  44          
  45          
  46          /**************************************************************
  47          * Prototype Declare Section
  48          **************************************************************/
  49          
  50          
  51          /**************************************************************
  52          * Global Variable Declare Section
  53          **************************************************************/
  54          
C51 COMPILER V9.56.0.0   SETTIME                                                           07/27/2017 10:57:45 PAGE 2   

  55          /**************************************************************
  56          * Function Define Section
  57          **************************************************************/
  58          
  59          /**
  60          *  @name: void setTimeb
  61          * @description:  µ˜’˚ ±º‰
  62          * @param    :n =0 ±–ﬁ∏ƒ–° ±£¨=1 ±–ﬁ∏√∑÷÷”£¨=2 ±–ﬁ∏ƒ√Î÷”£¨numŒ™–ﬁ∏ƒ«∞µƒ÷µ£¨
  63           *  @return   : –ﬁ∏ƒ∫Ûµƒ÷µ
  64           *  @notice : none
  65           */
  66          uchar  setTimeB(uchar n, uchar num, uint colo)
  67          {
  68   1        char j = 0, m;
  69   1        bit tag = 0;
  70   1        TFT_ClearScreen(0x0000);    //«Â∆¡£¨œ˚≥˝∆¡ƒª÷Æ«∞œ‘ æƒ⁄»›µƒ”∞œÏ
  71   1        if( n == 0 )           //X  –ﬁ∏ƒ–° ±
  72   1        {
  73   2          TFT_paintSetSur("HOUR");     
  74   2        }
  75   1        if( n == 1 )           //X  –ﬁ∏ƒ∑÷÷”
  76   1        {
  77   2          TFT_paintSetSur("MINUTE");     
  78   2        } 
  79   1        if( n == 2 )           //X  –ﬁ∏ƒ√Î÷”
  80   1        {
  81   2          TFT_paintSetSur("SECOND");     
  82   2        }   
  83   1        GUI_WriteASCIICh(49, 58 , num / 10 +'0', colo, 0x0000);   //œ‘ æ–Ë“™…Ë÷√µƒ÷µ1°§
  84   1        GUI_WriteASCIICh(61, 58 , num % 10 +'0', colo, 0x0000); 
  85   1        while(1) 
  86   1         {
  87   2          if(TOUCH_XPT_ReadXY() == 1)   
  88   2          {
  89   3            //◊™ªØ
  90   3            x=xpt_xy.x;
  91   3            x=(x-304)*175/3422;
  92   3            y=xpt_xy.y;
  93   3            y=(y-256)*219/3440;     
  94   3            if(x>174)
  95   3            {
  96   4              x=174;
  97   4            }
  98   3            if(y>218)
  99   3            {
 100   4                y=218;
 101   4            }
 102   3            //…Ë÷√ ±º‰ 
 103   3            if((x>115)&&(y>45)&&(y<85))   //0
 104   3            {
 105   4              m = 0;
 106   4              tag = 1;
 107   4            }
 108   3            else if((x<60)&&(y>95)&&(y<135))    //1
 109   3            {
 110   4              m = 1;
 111   4              tag = 1;        
 112   4            }
 113   3            else if((x>70)&&(x<105)&&(y>95)&&(y<135)) //2
 114   3            {
 115   4              m = 2;
 116   4              tag = 1;  
C51 COMPILER V9.56.0.0   SETTIME                                                           07/27/2017 10:57:45 PAGE 3   

 117   4            }
 118   3            else if((x>115)&&(y>95)&&(y<135))  //3
 119   3            {
 120   4              m = 3;
 121   4              tag = 1;  
 122   4            }
 123   3            else if((x<60)&&(y>145)&&(y<165))   //4
 124   3            {
 125   4              m = 4;
 126   4              tag = 1;  
 127   4            }
 128   3            else if((x>70)&&(x<105)&&(y>145)&&(y<165)) //5
 129   3            {
 130   4              m = 5;
 131   4              tag = 1;  
 132   4            }
 133   3            else if((x>115)&&(y>145)&&(y<165)) //6
 134   3            {
 135   4              m = 6;
 136   4              tag = 1;  
 137   4            }
 138   3            else if((x<60)&&(y>175)&(y<205))    //7
 139   3            {
 140   4              m  = 7;
 141   4              tag = 1;  
 142   4            }
 143   3            else if((x>70)&&(x<105)&&(y>175)&&(y<205)) //8
 144   3            {
 145   4              m = 8;
 146   4              tag = 1;  
 147   4            }
 148   3            else if((x>115)&&(y>175)&&(y<205)) //9
 149   3            {
 150   4              m = 9;
 151   4              tag = 1;  
 152   4            }                                                             
 153   3            else if((x<55)&&(y<24))  //◊Û…œΩ«
 154   3            {
 155   4              break;   //ÕÀ≥ˆ—≠ª∑       
 156   4            } 
 157   3            if( tag == 1 )      //≈–∂œ «∑Ò–Ë“™∏¸∏ƒ
 158   3            { 
 159   4              tag = 0;
 160   4              j++;
 161   4              if( j == 1 )           //µ⁄“ª¥Œ–ﬁ∏ƒ
 162   4              {
 163   5                num = m;
 164   5              }
 165   4              if( j== 2)            //µ⁄∂˛¥Œ–ﬁ∏ƒ
 166   4              {
 167   5                num = num * 10 + m;
 168   5              }
 169   4              if( j == 3)   // ÷ÿ–¬–ﬁ∏ƒ
 170   4              {
 171   5                j =1;
 172   5                num = m;
 173   5              }
 174   4              if( n == 0 && num > 23 )
 175   4              {
 176   5                num = 23;          //–° ±◊Ó¥Û≤ª≥¨π˝23
 177   5              }
 178   4              else if( num > 59 )
C51 COMPILER V9.56.0.0   SETTIME                                                           07/27/2017 10:57:45 PAGE 4   

 179   4              {
 180   5                num = 59;      // ∑÷÷”∫Õ√Î÷”◊Ó¥Û≤ª≥¨π˝53
 181   5              }
 182   4              GUI_WriteASCIICh(49, 58 , num / 10 +'0', colo, 0x0000);   //œ‘ æ–Ë“™…Ë÷√µƒ÷µ1°§
 183   4              GUI_WriteASCIICh(61, 58 , num % 10 +'0', colo, 0x0000); 
 184   4              tag = 0;  
 185   4              Delay(40);
 186   4            }
 187   3          } 
 188   2        }
 189   1          TFT_ClearScreen(0x0000);    //«Â∆¡£ 
 190   1         return num;
 191   1      }
 192          
 193          
 194          /**
 195          *  @name: clockTime setTime(bit tag,clock setTime)
 196          * @description:  µ˜’˚ ±º‰
 197          * @param    :setime –Ë“™…Ë÷√µƒ ±º‰
 198           *  @return   : …Ë÷√∫Ûµƒ ±º‰
 199           *  @notice : none
 200           */
 201          clockTime setTimeA(bit tag,clockTime setTime)
 202          {
 203   1        uchar num;
 204   1        clockTime set;
 205   1        set = setTime;
 206   1        while(1) 
 207   1         {
 208   2          if(TOUCH_XPT_ReadXY() == 1)   
 209   2          {
 210   3            //◊™ªØ
 211   3            x=xpt_xy.x;
 212   3            x=(x-304)*175/3422;
 213   3            y=xpt_xy.y;
 214   3            y=(y-256)*219/3440;     
 215   3            if(x>174)
 216   3            {
 217   4              x=174;
 218   4            }
 219   3            if(y>218)
 220   3            {
 221   4                y=218;
 222   4            }
 223   3            //—°‘Ò…Ë÷√ ±º‰ 
 224   3            if( (y > 100)&&( y < 140 ) )
 225   3            {
 226   4              if( x<60 )    //–° ±
 227   4              {
 228   5                num = setTimeB(0, set.hour, 0xf800);
 229   5                if( num < 24 )         //≈–∂œ¥À¥Œ–ﬁ∏ƒ «∑Ò”––ß
 230   5                {
 231   6                  set.hour = num;
 232   6                }
 233   5                if( tag == 1 )
 234   5                {
 235   6                  time = set;
 236   6                }
 237   5                else
 238   5                {
 239   6                  timeclock =set;
 240   6                }
C51 COMPILER V9.56.0.0   SETTIME                                                           07/27/2017 10:57:45 PAGE 5   

 241   5                TFT_paintSetTime(tag);          
 242   5              }         
 243   4              else if( x<115 )    //∑÷÷”
 244   4              {
 245   5                num = setTimeB(1,set.minute, 0x7e0);      
 246   5                if( num < 60 )         //≈–∂œ¥À¥Œ–ﬁ∏ƒ «∑Ò”––ß
 247   5                {
 248   6                  set.minute = num;
 249   6                }
 250   5                if( tag == 1 )
 251   5                {
 252   6                  time = set;
 253   6                }
 254   5                else
 255   5                {
 256   6                  timeclock =set;
 257   6                }         
 258   5                TFT_paintSetTime(tag);              
 259   5              }               
 260   4              else    //√Î÷”
 261   4              {
 262   5                num = setTimeB(2, set.second, 0xffe0);
 263   5                if( num < 60 )         //≈–∂œ¥À¥Œ–ﬁ∏ƒ «∑Ò”––ß
 264   5                {
 265   6                  set.second = num;
 266   6                }
 267   5                if( tag == 1 )
 268   5                {
 269   6                  time = set;
 270   6                }
 271   5                else
 272   5                {
 273   6                  timeclock =set;
 274   6                }         
 275   5                TFT_paintSetTime(tag);          
 276   5              }
 277   4            }
 278   3        
 279   3            
 280   3            //∞¥ ˝◊÷…œ∑Ωº”“ª      
 281   3            else if( y < 90  && y > 55   )
 282   3            {
 283   4              if( x < 30 )    //–° ± ÆŒª
 284   4              {
 285   5                if( set.hour > 13 && set.hour < 20 )
 286   5                {
 287   6                  set.hour %= 10;
 288   6                }
 289   5                else if( set.hour > 19 )
 290   5                {
 291   6                  set.hour = set.hour % 10;
 292   6                }
 293   5                else
 294   5                {
 295   6                  set.hour += 10;
 296   6                }
 297   5                 GUI_WriteASCII2Ch(9, 100, set.hour / 10 + '0', 0xF800, 0x0000);  
 298   5              }
 299   4              else if( x<60 )   //–° ±∏ˆŒª
 300   4              {
 301   5                if( set.hour == 23 )
 302   5                {
C51 COMPILER V9.56.0.0   SETTIME                                                           07/27/2017 10:57:45 PAGE 6   

 303   6                  set.hour = 20;
 304   6                }
 305   5                else
 306   5                {
 307   6                  set.hour++;
 308   6                }
 309   5                GUI_WriteASCII2Ch(30, 100, set.hour % 10 + '0', 0xF800, 0x0000);          
 310   5              }     
 311   4              else if( x<85 )   //∑÷÷” ÆŒª
 312   4              {
 313   5                  if( set.minute > 49 )
 314   5                  {
 315   6                    set.minute %= 10;
 316   6                  }
 317   5                  else
 318   5                  {
 319   6                    set.minute += 10;
 320   6                  }
 321   5                  GUI_WriteASCII2Ch(69, 100, set.minute / 10 + '0', 0x07e0, 0x0000);        
 322   5              }   
 323   4              else if( x<115 )    //∑÷÷”∏ˆŒª
 324   4              {
 325   5                if( set.minute % 10 == 9 )    //µ±∑÷÷”∏ˆŒª ˝≤ª≥¨π˝9
 326   5                {
 327   6                  set.minute -= set.minute % 10;
 328   6                }
 329   5                else
 330   5                {
 331   6                  set.minute += 1;
 332   6                }
 333   5                GUI_WriteASCII2Ch(90, 100, set.minute % 10 + '0', 0x07e0, 0x0000);  
 334   5              }       
 335   4              else if( x<147 )    //√Î÷” ÆŒª
 336   4              {
 337   5                  if( set.second > 49 )
 338   5                  {
 339   6                    set.second %= 10;
 340   6                  }
 341   5                  else
 342   5                  {
 343   6                    set.second += 10;
 344   6                  }
 345   5                GUI_WriteASCII2Ch(129, 100, set.second / 10 + '0', 0xffe0, 0x0000); 
 346   5              }       
 347   4              else    //√Î÷”∏ˆŒª
 348   4              {
 349   5                if( set.second % 10 == 9 )    //µ±∑÷÷”∏ˆŒª ˝≤ª≥¨π˝9
 350   5                {
 351   6                  set.second -= set.second % 10;
 352   6                }
 353   5                else
 354   5                {
 355   6                  set.second += 1;
 356   6                }
 357   5                GUI_WriteASCII2Ch(150, 100, set.second % 10 + '0', 0xffe0, 0x0000);
 358   5              } 
 359   4            }
 360   3      
 361   3               // ∞¥ ˝◊÷œ¬∑Ωºı“ª
 362   3            else if( y < 185 && y >   155 )
 363   3            {
 364   4              if( x < 30 )    //–° ± ÆŒª
C51 COMPILER V9.56.0.0   SETTIME                                                           07/27/2017 10:57:45 PAGE 7   

 365   4              {
 366   5                if( set.hour < 4)
 367   5                {           
 368   6                   set.hour = set.hour + 2 * 10;
 369   6                }
 370   5                else if( set.hour < 10 )
 371   5                {
 372   6                  set.hour = set.hour + 10;
 373   6                }
 374   5                else
 375   5                {
 376   6                  set.hour -= 10;
 377   6                }
 378   5                 GUI_WriteASCII2Ch(9, 100, set.hour / 10 + '0', 0xF800, 0x0000);
 379   5             }
 380   4              else if( x<60 )   //–° ±∏ˆŒª
 381   4              {
 382   5      
 383   5                if( set.hour  == 20 )    //µ±–° ± ÆŒª ˝Œ™∂˛ ±£¨∏ˆŒª ˝≤ªƒ‹≥¨π˝»˝
 384   5                {
 385   6                  set.hour = 23;
 386   6                }
 387   5                else if( set.hour % 10 == 0 )       //–° ±∏ˆŒª ˝¥”–¬¥”0ø™ º
 388   5                {
 389   6                      set.hour = (set.hour / 10) * 10 + 9 ;
 390   6                }
 391   5                else
 392   5                {
 393   6                  set.hour -= 1 ;   
 394   6                } 
 395   5                GUI_WriteASCII2Ch(30, 100, set.hour % 10 + '0', 0xF800, 0x0000);          
 396   5              }     
 397   4              else if( x<85 )   //∑÷÷” ÆŒª
 398   4              {
 399   5                if( set.minute < 10 )
 400   5                {
 401   6                  set.minute = set.minute % 10 + 5 * 10;
 402   6                }
 403   5                else
 404   5                {
 405   6                   set.minute -= 10;
 406   6                }           
 407   5                  GUI_WriteASCII2Ch(70, 100, set.minute / 10 + '0', 0x07e0, 0x0000);        
 408   5              }   
 409   4              else if( x<120 )    //∑÷÷”∏ˆŒª
 410   4              {
 411   5      
 412   5                if( set.minute % 10 == 0 )    //µ±∑÷÷”∏ˆŒª ˝≤ª≥¨π˝9
 413   5                {
 414   6                  set.minute = (set.minute / 10) * 10 +  9;
 415   6                }
 416   5                else
 417   5                {
 418   6                  set.minute -= 1;
 419   6                }
 420   5                GUI_WriteASCII2Ch(90, 100, set.minute % 10 + '0', 0x07e0, 0x0000);  
 421   5              }       
 422   4              else if( x<156 )    //√Î÷” ÆŒª
 423   4              {
 424   5                if( set.second < 10 )
 425   5                {
 426   6                  set.second = set.second % 10 + 5 * 10;
C51 COMPILER V9.56.0.0   SETTIME                                                           07/27/2017 10:57:45 PAGE 8   

 427   6                }
 428   5                else
 429   5                {
 430   6                   set.second -= 10;
 431   6                }     
 432   5                GUI_WriteASCII2Ch(130, 100, set.second / 10 + '0', 0xffe0, 0x0000); 
 433   5              }       
 434   4              else    //√Î÷”∏ˆŒª
 435   4              {
 436   5                if( set.second % 10 == 0 )    //µ±∑÷÷”∏ˆŒª ˝≤ª≥¨π˝9
 437   5                {
 438   6                  set.second = (set.second / 10) * 10 +  9;
 439   6                }
 440   5                else
 441   5                {
 442   6                  set.second -= 1;
 443   6                }
 444   5                GUI_WriteASCII2Ch(150, 100, set.second % 10 + '0', 0xffe0, 0x0000);
 445   5              }       
 446   4            } 
 447   3            else if((x<55)&&(y<24))  //◊Û…œΩ«
 448   3            {
 449   4              break;   //ÕÀ≥ˆ—≠ª∑       
 450   4            }
 451   3            else if((x>115)&&(y<24)&& (tag == 0))  //◊Û…œΩ«
 452   3            {
 453   4              clockTag = 1;      //ø™∆Ùƒ÷÷”
 454   4              break;   //ÕÀ≥ˆ—≠ª∑       
 455   4            }
 456   3            Delay(20);
 457   3          } 
 458   2        }   
 459   1           TFT_ClearScreen(0x0000);   //«Â∆¡£¨œ˚≥˝∆¡ƒª÷Æ«∞œ‘ æƒ⁄»›µƒ”∞œÏ  
 460   1         return set;      
 461   1      }  
 462          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2609    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
