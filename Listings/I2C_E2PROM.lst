C51 COMPILER V9.56.0.0   I2C_E2PROM                                                        07/25/2017 10:45:18 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE I2C_E2PROM
OBJECT MODULE PLACED IN .\Objects\I2C_E2PROM.obj
COMPILER INVOKED BY: F:\keil51\C51\BIN\C51.EXE I2C_E2PROM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\I2C_E2PROM.lst) TABS(2) OBJECT(.\Objects\I2C_E2PROM.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          //重定义
   4          #ifndef uchar
   5          #define uchar unsigned char
   6          #endif
   7          
   8          #ifndef uint
   9          #define uint  unsigned int
  10          #endif
  11          
  12          //I2C初始化
  13          void I2C_init() 
  14          {
  15   1        SDA = 1;
*** ERROR C202 IN LINE 15 OF I2C_E2PROM.c: 'SDA': undefined identifier
  16   1        _nop_();
  17   1        SCL = 1;
  18   1        _nop_();
  19   1      }
  20          
  21          //I2C起始信号
  22          void I2C_Start()  
  23          {
  24   1        SCL = 1;
  25   1        _nop_();
  26   1        SDA = 1;
  27   1        delay_5us();
  28   1        SDA = 0;
  29   1        delay_5us();
  30   1      }
  31          
  32          //I2C终止信号
  33          void I2C_Stop()
  34          {
  35   1        SDA = 0;
  36   1        _nop_();
  37   1        SCL = 1;
  38   1        delay_5us();
  39   1        SDA = 1;
  40   1        delay_5us();
  41   1      }
  42          
  43          //主机发送应答
  44          void Master_ACK(bit i)    
  45          {
  46   1        SCL = 0; // 拉低时钟总线允许SDA数据总线上的数据变化
  47   1        _nop_(); // 让总线稳定
  48   1        if (i)   //如果i = 1 那么拉低数据总线 表示主机应答
  49   1        {
  50   2          SDA = 0;
  51   2        }
  52   1        else   
  53   1        {
C51 COMPILER V9.56.0.0   I2C_E2PROM                                                        07/25/2017 10:45:18 PAGE 2   

  54   2          SDA = 1;   //发送非应答
  55   2        }
  56   1        _nop_();//让总线稳定
  57   1        SCL = 1;//拉高时钟总线 让从机从SDA线上读走 主机的应答信号
  58   1        delay_5us();
  59   1        SCL = 0;//拉低时钟总线， 占用总线继续通信
  60   1        _nop_();
  61   1        SDA = 1;//释放SDA数据总线。
  62   1        _nop_();
  63   1      }
  64          
  65          //检测从机应答
  66          bit Test_ACK()
  67          {
  68   1        SCL = 1;
  69   1        delay_5us();
  70   1        if (SDA)  //从机发送非应答信号
  71   1        {
  72   2          SCL = 0;
  73   2          _nop_();
  74   2          I2C_Stop();
  75   2          return(0);
  76   2        }
  77   1        else    //从机应答
  78   1        {
  79   2          SCL = 0;
  80   2          _nop_();
  81   2          return(1);
  82   2        }
  83   1      }
  84          
  85          //发送一个字节
  86          void I2C_send_byte(uchar byte)
  87          {
  88   1        uchar i;
  89   1        for(i = 0 ; i < 8 ; i++) //发送数据给E2PROM，先从最高位开始发
  90   1        {
  91   2          SCL = 0;
  92   2          _nop_();        
  93   2          if (byte & 0x80)  //1000 0000
  94   2          { 
  95   3            _nop_();           
  96   3            SDA = 1;  
  97   3          }
  98   2          else
  99   2          {       
 100   3            SDA = 0;
 101   3            _nop_();
 102   3          }
 103   2          SCL = 1;
 104   2          _nop_();
 105   2          byte <<= 1; // 0101 0100B 
 106   2        }
 107   1        SCL = 0;
 108   1        _nop_();
 109   1        _nop_();
 110   1        SDA = 1;
 111   1      }
 112          
 113          
 114          //I2C 读一字节
 115          uchar I2C_read_byte()
C51 COMPILER V9.56.0.0   I2C_E2PROM                                                        07/25/2017 10:45:18 PAGE 3   

 116          {
 117   1        uchar dat,i;
 118   1        SCL = 0;
 119   1        _nop_();
 120   1        SDA = 1;   //主机接收数据
 121   1        _nop_();
 122   1        for(i = 0 ; i < 8 ; i++)
 123   1        {
 124   2          SCL = 1;
 125   2          _nop_();
 126   2          if (SDA)          
 127   2          {
 128   3             dat |= 0x01; //0000 0001 按位或，前八位同dat, 最后一位为1
 129   3          }
 130   2          else
 131   2          {
 132   3            dat &=  0xfe; //1111 1110  按位与，前八位同dat, 最后一位为0
 133   3          }
 134   2          _nop_();
 135   2          SCL = 0 ;
 136   2          _nop_();
 137   2          if(i < 7)
 138   2          {
 139   3            dat = dat << 1;  //高低位互换，从低位左移到高位
 140   3          }
 141   2        }
 142   1        return(dat);
 143   1      }
 144          
 145          //I2C主机发送数据，每一次写入数据都需要检测从机应答
 146          //每次使用这个函数只能写入一字节的数据
 147          bit I2C_transData(uchar ADDR, DAT)  //先发送E2PROM地址，再发送数据
 148          {                
 149   1        I2C_Start();          //发送起始信号
 150   1        I2C_send_byte(AT24C02_ADDR+0); //写入器件地址
 151   1        if (!Test_ACK())         //检测从机应答，决定是否继续发送数据
 152   1        {
 153   2          return(0);
 154   2        }
 155   1        I2C_send_byte(ADDR);       //发送写入首地址，由编写者决定
 156   1        if (!Test_ACK())         //检测从机应答
 157   1        {
 158   2          return(0);
 159   2        }
 160   1        I2C_send_byte(DAT);      //发送一字节的数据  
 161   1        if (!Test_ACK())       //检测从机应答
 162   1        {
 163   2          return(0);
 164   2        }
 165   1        I2C_Stop();          //I2C终止信号
 166   1        return(1);  
 167   1      }
 168          
 169          //I2C主机接收数据
 170          //主机读取E2PROM数据，每次只能从E2PROM的特定地址读取一字节数据，并返回该数据
 171          uchar I2C_receData(uchar ADDR)   
 172          {
 173   1        uchar DAT;
 174   1        I2C_Start();           //起始信号
 175   1        I2C_send_byte(AT24C02_ADDR+0);   //发送器件地址并发送数据
 176   1        if (!Test_ACK())
 177   1        {
C51 COMPILER V9.56.0.0   I2C_E2PROM                                                        07/25/2017 10:45:18 PAGE 4   

 178   2          return(0);
 179   2        }
 180   1        I2C_send_byte(ADDR);
 181   1        Master_ACK(0);    //主机发出非应答
 182   1        //------------------
 183   1        I2C_Start();
 184   1        I2C_send_byte(AT24C02_ADDR+1);  //发送器件地址并接受数据
 185   1        if (!Test_ACK())
 186   1        {
 187   2          return(0);
 188   2        }
 189   1      
 190   1        DAT = I2C_read_byte();  //主机读取到一字节之后
 191   1        Master_ACK(0);       //主机发出非应答
 192   1      
 193   1        I2C_Stop();
 194   1        return(DAT);  
 195   1      }

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
