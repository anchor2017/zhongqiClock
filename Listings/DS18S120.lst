C51 COMPILER V9.56.0.0   DS18S120                                                          07/26/2017 22:31:52 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DS18S120
OBJECT MODULE PLACED IN .\Objects\DS18S120.obj
COMPILER INVOKED BY: F:\keil51\C51\BIN\C51.EXE DS18S120.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\D
                    -S18S120.lst) TABS(2) OBJECT(.\Objects\DS18S120.obj)

line level    source

   1          /***************************************************************************************
   2           *  FileName          : 
   3           *  CopyRight         :
   4           *  ModuleName          : 
   5           *
   6           *  CPU             :
   7           *  RTOS            :
   8           *
   9           *  Create Data         : 
  10           *  Author/Corportation     : 
  11           *
  12           *  Abstract Description    : 
  13           *
  14           *--------------------------------Revision History--------------------------------------
  15           *  No  version   Data      Revised By      Item      Description
  16           *  
  17           *
  18           ***************************************************************************************/
  19          
  20          
  21          /**************************************************************
  22          * Debug switch Section
  23          **************************************************************/
  24          
  25          
  26          /**************************************************************
  27          * Include File Section
  28          **************************************************************/
  29          #include"AD.H"
  30          
  31          /**************************************************************
  32          * Macro Define Section
  33          **************************************************************/
  34          
  35          /**************************************************************
  36          * Struct Define Section
  37          **************************************************************/
  38          
  39          
  40          /**************************************************************
  41          * Prototype Declare Section
  42          **************************************************************/
  43          
  44          
  45          /**************************************************************
  46          * Global Variable Declare Section
  47          **************************************************************/
  48          
  49          
  50          /**************************************************************
  51          * File Static Variable Define Section
  52          **************************************************************/
  53          sbit ds = P3^7;
  54          
C51 COMPILER V9.56.0.0   DS18S120                                                          07/26/2017 22:31:52 PAGE 2   

  55          /**************************************************************
  56          * Function Define Section
  57          **************************************************************/
  58          
  59          /**
  60          *  @name: void delayMs(uint i)
  61          * @description: ÑÓÊ±º¯Êý
  62           *  @param£º i ÑÓÊ±Ê±¼ä 
  63           *  @return   £ºnone
  64           *  @notice £ºnone
  65           */
  66           void delayMs(uint i)
  67           {
  68   1         uchar j;
  69   1         while( i > 0 )
  70   1         {
  71   2           for( j = 0; j < 110; j++ )
  72   2           {
  73   3             ;
  74   3           }
  75   2           i--;
  76   2         }
  77   1       }
  78          
  79          /**
  80            *  @name: void dsreset()
  81            * @description: DS180B20¸´Î»£¬³õÊ¼»¯º¯Êý
  82            * @param: none
  83            * @return:    none
  84            *  @notice: none
  85           */
  86          void dsreset()
  87          {
  88   1        uint i;
  89   1        ds = 0;
  90   1        i = 103;
  91   1        while ( i > 0 )
  92   1        {
  93   2          i--;             //ÑÓÊ±
  94   2        }
  95   1        ds = 1;
  96   1        i = 4;
  97   1        while( i > 0) 
  98   1        {
  99   2          i--;
 100   2        }
 101   1      }
 102           
 103          /**
 104          *  @name: bit tempReadBit()
 105          * @description: ¶ÁÒ»Î»Êý¾Ý
 106           *  @param      
 107           *  @return   £º¶ÁÈ¡µÄÊý¾Ý
 108           *  @notice
 109           */
 110          bit tempReadBit()
 111          {
 112   1        uint i;
 113   1        bit dat;
 114   1        ds = 0;
 115   1        i++;
 116   1        ds = 1;
C51 COMPILER V9.56.0.0   DS18S120                                                          07/26/2017 22:31:52 PAGE 3   

 117   1        i++; i++;
 118   1        dat = ds;
 119   1        i = 8;
 120   1        while( i > 0 )
 121   1        {
 122   2          i--;
 123   2        }
 124   1        return dat;
 125   1      }
 126          
 127          
 128            
 129            /**
 130          *  @name: uchar tempRead()
 131           *  @description£º¶ÁÒ»¸ö×Ö½ÚÊý¾Ý
 132           *  @param      
 133           *  @return   £º¶ÁÈ¡µÄÊý¾Ý
 134           *  @notice
 135           */
 136           uchar tempRead()
 137          {
 138   1        uchar i, j, dat;
 139   1        dat = 0;
 140   1        for( i = 0; i < 8; i++ )
 141   1        {
 142   2          j = tempReadBit();
 143   2          dat = (dat >> 1) | (j << 7);               //½«¶ÁÈ¡µÄÊý¾Ý´æÈëÒ»¸ö×Ö½Ú
 144   2        } 
 145   1        return dat;
 146   1      }
 147            
 148           
 149           /**
 150           *  @name£ºvoid tempWrite(uchar dat)
 151           *  @description£º Ïòds18b20Ð´Ò»¸ö×Ö½ÚÊý¾Ý
 152           *  @param      £ºÐèÒªÐ´ÈëµÄÊý¾Ý
 153           *  @return   
 154           *  @notice
 155           */
 156          void tempWrite(uchar dat)
 157          {
 158   1        uint i;
 159   1        uchar j;
 160   1        bit test;
 161   1        for( j = 0; j < 8; j++ )
 162   1        {
 163   2          test = dat & 0x01;
 164   2          dat >>= 1;
 165   2          if( test == 1 )           //Ð´1
 166   2          {
 167   3            ds = 0;
 168   3            i++; i++;
 169   3            ds = 1;
 170   3            i = 8;
 171   3            while( i > 0 )
 172   3            {
 173   4              i--;
 174   4            }
 175   3          }
 176   2          else             //Ð´0
 177   2          {
 178   3            ds = 0;
C51 COMPILER V9.56.0.0   DS18S120                                                          07/26/2017 22:31:52 PAGE 4   

 179   3            i = 8;
 180   3            while( i > 0 )
 181   3            {
 182   4              i--;
 183   4            }
 184   3            ds = 1;
 185   3            i++; i++;
 186   3          }
 187   2        }
 188   1      }
 189          
 190           
 191           /**
 192          *  @name:float getTemp()
 193          * @description: ¶ÁÈ¡ÎÂ¶È
 194           *  @param  £º none     
 195          * @return   : ¶ÁÈ¡µ½µÄÎÂ¶È * 10
 196          *  @notice   :none
 197           */
 198          uint getTemp()
 199          {
 200   1        uchar a, b;
 201   1        float ftemp;
 202   1        uint  temp;
 203   1        dsreset();
 204   1        delayMs(1);
 205   1        tempWrite(0xcc);
 206   1        tempWrite(0xbe);
 207   1        a = tempRead();          //¶ÁµÍ8Î»
 208   1        b = tempRead();          //¶Á¸ß8Î» 
 209   1        temp = b;
 210   1        temp <<= 8;
 211   1        temp = temp | a;         //ºÏ²¢ÎªÒ»¸ö×Ö
 212   1        ftemp = temp * 0.0625;          //ÎÂ¶ÈÔÚ¼Ä´æÆ÷ÖÐÎª12Î»£¬·Ö±æÂÊÎª0.0625
 213   1        temp = ftemp * 10 + 0.5;           //¬+0.05ÎªËÄÉáÎåÈë,*10 ±íÊ¾Ö§È¡Ò»Î»Ð¡Êý
 214   1        return temp;
 215   1      }
 216          
 217           /**
 218          *  @name:void tempchang()
 219          * @description: ¿ªÊ¼»ñÈ¡ÎÂ¶È²¢×ª»»
 220          * @param      :none
 221          * @return   :none
 222          *  @notice : none
 223           */
 224          void tempchange()
 225          {
 226   1        dsreset();
 227   1        delayMs(1);
 228   1        tempWrite(0xcc);    //Ð´Ìø¹ý¶ÁromÖ¸Áî
 229   1        tempWrite(0x44);     //Ð´ÎÂ¶È×ª»»Ö¸Áî
 230   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    286    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
C51 COMPILER V9.56.0.0   DS18S120                                                          07/26/2017 22:31:52 PAGE 5   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
